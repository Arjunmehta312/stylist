on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Version identifier for this release"
        required: true
      next-version:
        description: "Version identifier for subsequent development"
        required: true

jobs:
  make-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[release]

      - name: Update version for release
        run: |
          sed -i 's|\([[:space:]]*__version__[[:space:]]*=[[:space:]]*\)["'\''].*["'\'']|\1"${{inputs.release-version}}"|' source/stylist/__init__.py
          git add source/stylist/__init__.py
          git -c user.name="Release Workflow" -c user.email=release@example.com commit -a -m "Update version number for release"

      - name: Tag release
        run: |
          git -c user.name="Release Workflow" -c user.email=release@example.com tag -a -m "Release ${{inputs.release-version}}" v${{inputs.release-version}}

      - name: Update version after release
        run: |
          sed -i 's|\([[:space:]]*__version__[[:space:]]*=[[:space:]]*\)["'\''].*["'\'']|\1"${{inputs.next-version}}"|' source/stylist/__init__.py
          git add source/stylist/__init__.py
          git -c user.name="Release Workflow" -c user.email=release@example.com commit -a -m "Update version number after release"
          git push

      - name: Make release
        uses: actions/create-release@v1.1.4
        #env:
        #  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{inputs.release-version}}
          release_name: Release ${{inputs.release-version}}
          body: |
            ${{steps.Changelog.outputs.changelog }}
          draft: true
          prerelease: true

      - name: Deploy to PyPi
        run: |
          python3 setup.py sdist
          python3 setup.py bdist_whell
          python3 -m twine dist/*
